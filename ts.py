# import Ui_py2exe
# import sys
# from PyQt5.QtWidgets import QApplication,QMainWindow,QMessageBox
# import os
# from pathlib import PureWindowsPath
#
# def dabao():
#     fullpath=ui.lineEdit.text()
#     f=PureWindowsPath(fullpath)
#     filedir=fullpath.replace(f.name,"")
#     if ui.checkBox.isChecked()==True:
#         second=os.system("cd "+filedir+"&&pyinstaller -F -w "+fullpath)
#         if second==0 :
#             QMessageBox.about(mainWindow, "执行结果", "恭喜！成功打包exe")
#         else:
#             QMessageBox.about(mainWindow, "执行结果", "未知错误")
#     else:
#         second=os.system("cd "+filedir+"&&pyinstaller -F "+fullpath)
#         if second==0 :
#             QMessageBox.about(mainWindow, "执行结果", "恭喜，成功打包exe")
#         else:
#             QMessageBox.about(mainWindow, "执行结果", "未知错误")
#
# if __name__=="__main__":
#     app=QApplication(sys.argv)
#     #创建一个窗口
#     mainWindow=QMainWindow()
#     ui=Ui_py2exe.Ui_MainWindow()
#     ui.setupUi(mainWindow)
#     ui.pushButton_2.clicked.connect(dabao)
#     mainWindow.show()
#     sys.exit(app.exec_())
#
# # -*- coding: utf-8 -*-
#
# # Form implementation generated from reading ui file 'c:\Users\谭鸿伟\Documents\pythonworks\10-py2exe\py2exe.ui'
# #
# # Created by: PyQt5 UI code generator 5.15.2
# #
# # WARNING: Any manual changes made to this file will be lost when pyuic5 is
# # run again.  Do not edit this file unless you know what you are doing.
#
#
# from PyQt5 import QtCore, QtGui, QtWidgets
#
#
# class Ui_MainWindow(object):
#     def setupUi(self, MainWindow):
#         MainWindow.setObjectName("MainWindow")
#         MainWindow.resize(650, 290)
#         self.centralwidget = QtWidgets.QWidget(MainWindow)
#         self.centralwidget.setObjectName("centralwidget")
#         self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
#         self.lineEdit.setGeometry(QtCore.QRect(180, 20, 381, 31))
#         self.lineEdit.setObjectName("lineEdit")
#         self.label = QtWidgets.QLabel(self.centralwidget)
#         self.label.setGeometry(QtCore.QRect(70, 30, 101, 16))
#         self.label.setObjectName("label")
#         self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
#         self.checkBox.setGeometry(QtCore.QRect(310, 120, 141, 21))
#         self.checkBox.setObjectName("checkBox")
#         self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
#         self.pushButton_2.setGeometry(QtCore.QRect(230, 160, 271, 31))
#         self.pushButton_2.setObjectName("pushButton_2")
#         self.label_2 = QtWidgets.QLabel(self.centralwidget)
#         self.label_2.setGeometry(QtCore.QRect(80, 80, 81, 16))
#         self.label_2.setObjectName("label_2")
#         self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
#         self.lineEdit_2.setGeometry(QtCore.QRect(180, 70, 381, 31))
#         self.lineEdit_2.setObjectName("lineEdit_2")
#         self.label_3 = QtWidgets.QLabel(self.centralwidget)
#         self.label_3.setGeometry(QtCore.QRect(170, 200, 431, 31))
#         font = QtGui.QFont()
#         font.setPointSize(15)
#         self.label_3.setFont(font)
#         self.label_3.setObjectName("label_3")
#         MainWindow.setCentralWidget(self.centralwidget)
#         self.menubar = QtWidgets.QMenuBar(MainWindow)
#         self.menubar.setGeometry(QtCore.QRect(0, 0, 650, 23))
#         self.menubar.setObjectName("menubar")
#         MainWindow.setMenuBar(self.menubar)
#         self.statusbar = QtWidgets.QStatusBar(MainWindow)
#         self.statusbar.setObjectName("statusbar")
#         MainWindow.setStatusBar(self.statusbar)
#
#         self.retranslateUi(MainWindow)
#         QtCore.QMetaObject.connectSlotsByName(MainWindow)
#
#     def retranslateUi(self, MainWindow):
#         _translate = QtCore.QCoreApplication.translate
#         MainWindow.setWindowTitle(_translate("MainWindow", "py2exe by 爱在初夏夜"))
#         self.label.setText(_translate("MainWindow", "Py文件完整路径："))
#         self.checkBox.setText(_translate("MainWindow", "隐藏CMD窗口"))
#         self.pushButton_2.setText(_translate("MainWindow", "包成exe"))
#         self.label_2.setText(_translate("MainWindow", "文件图标路径："))
#         self.label_3.setText(_translate("MainWindow", "exe保存路径为源文件所在文"))


#....................................................

import smtplib
import email
from email.mime.text import MIMEText
from email.mime.image import MIMEImage
from email.mime.multipart import MIMEMultipart
from email.header import Header

# SMTP服务器,这里使用企业邮箱
mail_host = "smtp.300.cn"
# 发件人邮箱
mail_sender = "wuhaoyu@300.cn"
# 邮箱授权码,注意这里不是邮箱密码,如何获取邮箱授权码,请看本文最后教程
mail_license = "wuhaoyu@300"
# 收件人邮箱，可以为多个收件人
mail_receivers = ["1165951374@qq.com"]

mm = MIMEMultipart('related')

# 邮件主题
subject_content = """自动化测试异常"""
# 设置发送者,注意严格遵守格式,里面邮箱为发件人邮箱
mm["From"] = "异常监控<wuhaoyu@300.com>"
# 设置接受者,注意严格遵守格式,里面邮箱为接受者邮箱
mm["To"] = "receiver_1_name<1165951374@qq.com>"
# 设置邮件主题
mm["Subject"] = Header(subject_content,'utf-8')

# 邮件正文内容
body_content = """你好，这是一个测试邮件！"""
# 构造文本,参数1：正文内容，参数2：文本格式，参数3：编码方式
message_text = MIMEText(body_content,"plain","utf-8")
# 向MIMEMultipart对象中添加文本对象
mm.attach(message_text)


# 创建SMTP对象
stp = smtplib.SMTP()
# 设置发件人邮箱的域名和端口，端口地址为25
stp.connect(mail_host, 25)
# set_debuglevel(1)可以打印出和SMTP服务器交互的所有信息
stp.set_debuglevel(1)
# 登录邮箱，传递参数1：邮箱地址，参数2：邮箱授权码
stp.login(mail_sender,mail_license)
# 发送邮件，传递参数1：发件人邮箱地址，参数2：收件人邮箱地址，参数3：把邮件内容格式改为str
stp.sendmail(mail_sender, mail_receivers, mm.as_string())
print("邮件发送成功")
# 关闭SMTP对象
stp.quit()











